#!/bin/python3
from tsp_solver.greedy_numpy import solve_tsp
from tsp_solver.demo.tsp import make_dist_matrix

A = [['0 Gamla Erikslätt flygplats', 12, 67]]
A += [['1 Ängelhammar flygplats', 83, 46]]
A += [['2 Nya Grörtsala flygplats', 116, 64]]
A += [['3 Titskrona flygplats', 77, 76]]
A += [['4 Östra Ängelhammar', 49, 48]]
A += [['5 Stora Malbro flygplats', 77, 15]]
A += [['6 Sprippkulle flygplats', 12, 89]]
A += [['7 Drotbyn flygplats', 89, 166]]
A += [['8 Gnylvalla flygplats', 92, 204]]
A += [['9 Tratthammar flygplats', 100, 251]]
A += [['10 Sandudde flygplats', 61, 227]]
A += [['11 Krånnbukten flygplats', 41, 203]]
A += [['12 Nävköping flygplats', 17, 234]]
A += [['13 Oskarberg flygplats', 20, 193]]

lx, ly = [], []

for i in A:
	lx += [i[1]]
	ly += [i[2]]

def get_endpoints(_list):
	a, b, _min = 0, 1, _list[1]
	for i in range(2, len(_list)):
		x = _list[i]
		if x < _min:
			b, _min = i, x
	return (a, b)

matrix = make_dist_matrix(lx, ly)
endps = get_endpoints(matrix[0])
path = solve_tsp(matrix, endpoints = endps)

print(path)

for i in path:
	print(A[i])

"""
[0, 4, 5, 1, 3, 2, 7, 8, 9, 10, 12, 13, 11, 6]
['0 Gamla Erikslätt flygplats', 12, 67]
['4 Östra Ängelhammar', 49, 48]
['5 Stora Malbro flygplats', 77, 15]
['1 Ängelhammar flygplats', 83, 46]
['3 Titskrona flygplats', 77, 76]
['2 Nya Grörtsala flygplats', 116, 64]
['7 Drotbyn flygplats', 89, 166]
['8 Gnylvalla flygplats', 92, 204]
['9 Tratthammar flygplats', 100, 251]
['10 Sandudde flygplats', 61, 227]
['12 Nävköping flygplats', 17, 234]
['13 Oskarberg flygplats', 20, 193]
['11 Krånnbukten flygplats', 41, 203]
['6 Sprippkulle flygplats', 12, 89]
"""
